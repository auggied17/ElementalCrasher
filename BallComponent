import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.awt.Color;
import java.awt.Font;

import javax.imageio.ImageIO;
import javax.swing.JComponent;
import javax.swing.JLabel;

public class BallComponent extends JComponent implements Runnable, KeyListener
{
	Test a = new Test(); 
	
	int player1 = a.player1; 
	int player2 = a.player2;
	
	private int  x_EarthSpecial, x_AirSpecial, x_FireSpecial, x_WaterSpecial;
	private int Earth_speed, EarthSpecial_speed, Air_speed, AirSpecial_speed, Fire_speed, FireSpecial_speed, Water_speed, WaterSpecial_speed;;
	private int y_Earth, y_EarthSpecial, y_Air, y_AirSpecial, y_Fire, y_FireSpecial, y_Water, y_WaterSpecial;
	private int key;
	
	private BufferedImage Air; 
	private BufferedImage Fire; 
	private BufferedImage Water; 
	private BufferedImage Earth; 
	private BufferedImage background;
	private BufferedImage win1; 
	private BufferedImage win2;
	private BufferedImage label1; 
	private BufferedImage label2;

	private int player1_x;
	private int player1_y;
	private int player2_x ;
	private int player2_y;
	
	private int Earth_health, Air_health, Fire_health, Water_health;
	private int Earth_damage, Air_damage, Fire_damage, Water_damage;
	
	
	private int player1_health; 
	private int player2_health;
	private int player1_damage; 
	private int player2_damage; 
	
	private int special1, special2, move, move2;
	
	private String player1health; 
	private String player2health;
	private String player1label = "Player 1 HP:";
	private String player2label = "Player 2 HP:";
	
	boolean check = true; 
	boolean check2 = true;
	boolean valid = false;
	boolean valid2 = false;

	
	Font stringFont = new Font("Dialog", Font.PLAIN, 20);
	
	
	
	public BallComponent()
	{
		player1_x = 300;
		player1_y = 200;
		player2_x = 700;
		player2_y = 200;
		special1 = player1_x;
		special2 = player2_x;
		Earth_health = 2000; 
		Air_health = 1700;
		Fire_health = 1500;
		Water_health = 1700;
		Earth_damage = 60; 
		Air_damage = 60;
		Fire_damage = 80;
		Water_damage = 50;
		
		if(player1 == 1)
		{ 
			player1_health = Earth_health; 
			player1_damage = Earth_damage;
		}
		
		if(player1 == 2)
		{ 
			player1_health = Air_health; 
			player1_damage = Air_damage;
		}
		
		if(player1 == 3)
		{ 
			player1_health = Fire_health; 
			player1_damage = Fire_damage;
		}
		
		if(player1 == 4)
		{ 
			player1_health = Water_health; 
			player1_damage = Water_damage;
		}
		
		

		if(player2 == 1)
		{ 
			player2_health = Earth_health; 
			player2_damage = Earth_damage;
		}
		
		if(player2 == 2)
		{ 
			player2_health = Air_health; 
			player2_damage = Air_damage;
		}
		
		if(player2 == 3)
		{ 
			player2_health = Fire_health; 
			player2_damage = Fire_damage;
		}
		
		if(player2 == 4)
		{ 
			player2_health = Water_health; 
			player2_damage = Water_damage;
		}
		
		
		addKeyListener(this); 
		setFocusable(true); 
		setFocusTraversalKeysEnabled(true);
		
		
		try
		{ 
			background = ImageIO.read(Test.class.getResourceAsStream("SmashersBackground.jpg"));
			label1 = ImageIO.read(Test.class.getResourceAsStream("LabelPlayer1.png"));
			label2 = ImageIO.read(Test.class.getResourceAsStream("LabelPlayer2.png"));
			Water = ImageIO.read(Test.class.getResourceAsStream("WaterElement.png"));
			Fire = ImageIO.read(Test.class.getResourceAsStream("FireElement.png"));
			Air = ImageIO.read(Test.class.getResourceAsStream("AirElement.png"));
			Earth = ImageIO.read(Test.class.getResourceAsStream("EarthElement.png"));
			win1 = ImageIO.read(Test.class.getResourceAsStream("Player1Wins.png"));
			win2 = ImageIO.read(Test.class.getResourceAsStream("Player2Wins.png"));
		}
		
		catch(IOException | IllegalArgumentException e)
		{ 
			e.printStackTrace(); 
		}
		
	}
	
	public void startAnimation()
	{
 		Thread t = new Thread(this);
		t.start();
	}
	
	public void run() 
	{
		while (true)
		{
		try
		{ 
			
			if(move == 1)
			{
				
				special1+= 5;
				
				if(player2_y == 140 && (player2_x - 110) <= special1 && (player2_x-60) >= special1)
				{
					repaint();
					Thread.sleep(300);
					player2_y = 200;
					Thread.sleep(100);
					special1 = player2_x +60;
				}
				
			
				
				
				
			}
			else
			{
				special1 = player1_x;
				if(player1_y == 140)
				{ 
					if(player1_y >= 200)
					{ 
						player1_y--;
						repaint(); 
						Thread.sleep(40);
						
					}
					 repaint();
					Thread.sleep(300); 
					player1_y = 200;
				}
				
				if(player2_y == 140)
				{ 
					if(player2_y >= 200)
					{ 
						player2_y--;
						
					}
					repaint(); 
					Thread.sleep(300); 
					player2_y = 200;
				}
			}
			
			if(move2 == 0)
			{
				special2 = player2_x;
			}
			if(move2 == 1)
			{
				special2-= 5;
				
				 if(player1_y == 140 && (player1_x + 120) <= special2 && (player1_x+60) >= special2)
				{
					repaint();
					Thread.sleep(300);
					player1_y = 200;
					Thread.sleep(100);
					special2 = player1_x -60;
				}
				
				
			}
			
				
			
			if(player1_y <= 140)
			{ 
				while(player1_y >= 200)
				{ 
					player1_y--;
					repaint(); 
					Thread.sleep(40);
					
					
				}
				 repaint();
				Thread.sleep(300); 
				player1_y = 200;
			}
			
			if(player2_y <= 140)
			{ 
				while(player2_y >= 200)
				{ 
					player2_y--;
					
				}
				repaint(); 
				Thread.sleep(300); 
				player2_y = 200;
			}
			
			
			
			if(player1_x <= 200 || player1_x >= 780)
			{ 
				while(player1_y >= 200 && player1_y < 650)
				{ 
					player1_y+=10;
					repaint(); 
					Thread.sleep(40);
					
					
				}
				 repaint();
				Thread.sleep(300); 
				player1_y = 650;
				
			}
			
			if(player2_x <= 200 || player2_x >= 780)
			{ 
				while(player2_y >= 200 && player2_y < 650)
				{ 
					player2_y+=10;
					repaint(); 
					Thread.sleep(40);
					
					
				}
				 repaint();
				Thread.sleep(300); 
				player2_y = 650;
				
			}
			
			repaint(); 
			Thread.sleep(20);
		}
		catch (InterruptedException e)
		{ 
			
		}
		}
	}

	
	public void paintComponent(Graphics g)
	{
		
		g.drawImage(background,0,0,null);
		
		g.setFont(stringFont);
		player1health = String.valueOf(player1_health);
		player2health = String.valueOf(player2_health);
		
		g.drawString(player1label, 30, 60);
		g.drawString(player2label, 730, 60);
		g.drawString(player1health, 150, 60);
		g.drawString(player2health, 850, 60);
		
		
		
		if(player1 == 1)
		{ 
			g.drawImage(label1, player1_x + 30, player1_y - 40, null);
			g.drawImage(Earth, player1_x, player1_y, null);
			
			if(valid)
			{
			g.setColor(Color.green);
			g.fillOval(special1+60, 230, 20,20);
			}
			
		}
		
		if(player1 == 2)
		{ 
			g.drawImage(label1, player1_x + 30, player1_y - 40, null);
			g.drawImage(Air, player1_x, player1_y, null);
			
			if(valid)
			{
			g.setColor(Color.gray);
			g.fillOval(special1+60, 230, 20,20);
			}
		}
		
		if(player1 == 3)
		{ 
			g.drawImage(label1, player1_x + 30, player1_y - 40, null);
			g.drawImage(Fire, player1_x, player1_y, null);
		
			if(valid)
			{
			g.setColor(Color.red);
			g.fillOval(special1+ 60, 230, 20, 20);
			}
		
		}
		
		if(player1 == 4)
		{ 
			g.drawImage(label1, player1_x + 30, player1_y - 40, null);
			g.drawImage(Water, player1_x, player1_y, null);
		
			if(valid)
			{
			g.setColor(Color.blue);
			g.fillOval(special1+60,230, 20,20);
			}
		
		}
	
		
		//player 2 
		
		if(player2 == 1)
		{ 
			g.drawImage(label2, player2_x + 30, player2_y - 40, null);
			g.drawImage(Earth, player2_x, player2_y, null);
			
			if(valid2)
			{
			g.setColor(Color.green);
			g.fillOval(special2-10, 230, 20,20);
			}
			
		}
		
		if(player2 == 2)
		{ 
			
			g.drawImage(label2, player2_x + 30, player2_y - 40, null);
			g.drawImage(Air, player2_x, player2_y, null);
		
			if(valid2)
			{
			g.setColor(Color.gray);
			g.fillOval(special2-10, 230, 20,20);
			}
			
		}
		
		if(player2 == 3)
		{ 
			g.drawImage(label2, player2_x + 30, player2_y - 40, null);
			g.drawImage(Fire, player2_x, player2_y, null);
			
			if(valid2)
			{
			g.setColor(Color.red);
			g.fillOval(special2-10, 230, 20,20);
			}
		
		}
		
		if(player2 == 4)
		{ 
			g.drawImage(label2, player2_x + 30, player2_y - 40, null);
			g.drawImage(Water, player2_x, player2_y, null);
			
			if(valid2)
			{
			g.setColor(Color.blue);
			g.fillOval(special2-10, 230, 20,20);
			}
		}
		
		
		if( player2_y == 200 && special1 - player2_x >= -5 && special1 - player2_x <= 0 && player1_x < player2_x)
		{ 
			player2_health -= 300;
			special1 = 1500;
		}
		
		
		if(player1_y == 200 && special2 - player1_x >= 0 && special2 - player1_x <= 5 && player1_x < player2_x)
		{ 
			player1_health -= 300;
			special2 = -500;
		}
		
		
		if((player2_y == 650 || player2_health <= 0) && check) // player 1 wins if player 2 falls
		{ 
			g.drawImage(win1,400,50,null);
			
			check2 = false;
			
		}
		
		if((player1_y == 650 || player1_health <= 0) && check2) // player 2 wins if player 1 falls
		{ 
			g.drawImage(win2,400,50,null);
			
			check = false;
		}
		
	}
		
	
	
	
	
	
	public void keyPressed(KeyEvent e) 
	{
		
		key = e.getKeyCode();
		
		if(e.getKeyCode() == 68 )  // player 1 right movement 
		{ 
			if(player1 == 1 && check && check2)
			{ 
				Earth_speed = 5; 
				player1_x += Earth_speed;
				
			}
			
			if(player1 == 2 && check && check2 )
			{ 
				Air_speed = 15; 
				player1_x += Air_speed;
				
			}
			
			if(player1 == 3 && check && check2)
			{ 
				Fire_speed = 15; 
				player1_x += Fire_speed;
			}
			
			if(player1 == 4 && check && check2)
			{ 
				Water_speed = 25; 
				player1_x += Water_speed;
			}
			
		}
		
		if(e.getKeyCode() == 65 && check && check2) // player 1 left movement
		{ 
			
			if(player1 == 1)
			{ 
				Earth_speed = -5; 
				player1_x += Earth_speed;
			}
			
			if(player1 == 2)
			{ 
				Air_speed = -9; 
				player1_x += Air_speed;
			}
			
			if(player1 == 3)
			{ 
				Fire_speed = -9; 
				player1_x += Fire_speed;
			}
			
			if(player1 == 4)
			{ 
				Water_speed = -21; 
				player1_x += Water_speed;
			}
		}
		
		if(e.getKeyCode() == 87 && player1_y == 200 ) // player 1 jump
		{ 
			if(move2 == 0)
			{
			player1_y -= 60;
			} 
			else if(move2 == 1 && special2 < player1_x + 110)
			{ 
				player1_y -= 60;
			}
		}
	
		
		if(e.getKeyCode() == 81) // player 1 left attack
		{ 
			if(player1_x - player2_x >= 0 && player1_x - player2_x <= 65 && check && check2 )
			{ 
				player2_health -= player1_damage;
				
			}
			
		}
	
	
		if(e.getKeyCode() == 69) // player 1 right attack
		{ 
			if(player1_x - player2_x <= 0 && player1_x - player2_x >= -65 && check && check2 )
			{ 
				player2_health -= player1_damage;
				
			}
			
		}
		
		
		
		if(e.getKeyCode() == 70) // player 1 special attack
		{ 
			move = 1;
			valid = true;
		}
		
		
		
		
		//player 2
		
		
		
		if(e.getKeyCode() == 76 && check && check2) // player 2 right movement 
		{ 
			if(player2 == 1)
			{ 
				Earth_speed = 5; 
				player2_x += Earth_speed;
			}
			
			if(player2 == 2)
			{ 
				Air_speed = 9; 
				player2_x += Air_speed;
			}
			
			if(player2 == 3)
			{ 
				Fire_speed = 9; 
				player2_x += Fire_speed;
			}
			
			if(player2 == 4)
			{ 
				Water_speed = 15; 
				player2_x += Water_speed;
			}
		}
		
		if(e.getKeyCode() == 74 && check && check2)
		{ 
			if(player2 == 1)
			{ 
				Earth_speed = -5; 
				player2_x += Earth_speed;
			}
			
			if(player2 == 2)
			{ 
				Air_speed = -9; 
				player2_x += Air_speed;
			}
			
			if(player2 == 3)
			{ 
				Fire_speed = -9; 
				player2_x += Fire_speed;
			}
			
			if(player2 == 4)
			{ 
				Water_speed = -15; 
				player2_x += Water_speed;
			}
			
		}	
		
		if(e.getKeyCode() == 73 && player2_y == 200) // player 2 jump
		{ 
			if(move == 0)
			{
			player2_y -= 60;
			} 
			else if(move == 1 && special1 > player2_x - 110)
			{ 
				player2_y -= 60;
			}
		}
		
		if(e.getKeyCode() == 85 ) // player 2 left attack
		{ 
			if(player2_x - player1_x > 0 && player2_x - player1_x <= 65 && check && check2)
			{ 
				player1_health -= player2_damage;
			}
		}
	
		
		if(e.getKeyCode() == 79) // player 2 right attack
		{ 
			if(player2_x - player1_x <= 0 && player2_x - player1_x >= -65 && check && check2)
			{ 
				player1_health -= player2_damage;
			}
		}
		
		if(e.getKeyCode() == 72)
		{
			move2 = 1;
			valid2 = true;
		
		}
	
		
	
	}



	
	

	
	public void keyReleased(KeyEvent arg0) 
	{
		
		
	}

	
	public void keyTyped(KeyEvent arg0) 
	{
		
		
	}

	
	
	

	
}
